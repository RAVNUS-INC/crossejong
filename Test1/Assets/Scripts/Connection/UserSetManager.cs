using Photon.Pun;
using Photon.Realtime; // AuthenticationValues ¹× ±âÅ¸ ½Ç½Ã°£ ±â´É »ç¿ë
using PlayFab;
using PlayFab.ClientModels;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Hashtable = ExitGames.Client.Photon.Hashtable;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;


// À¯Àú ÇÁ·ÎÇÊ ¼³Á¤ È­¸é¿¡¼­ ÀÛµ¿ÇÏ´Â ÄÚµå(´Ğ³×ÀÓ, À¯ÀúÇÁ·ÎÇÊ»çÁø º¯°æ ÀúÀå)
public class UserSetManager : MonoBehaviourPunCallbacks
{
    public static UserSetManager Instance { get; private set; }

    [SerializeField] public InputField inputText; //´Ğ³×ÀÓ ÀÔ·Â(³ªÁß¿¡ ¹Ù²Ü ¼ö ÀÖ´Â Displayname)
    [SerializeField] Button confirmButton; //Á¦Ãâ(ÀúÀå) ¹öÆ°
    [SerializeField] Text warningText; // °æ°í ¸Ş½ÃÁö¸¦ Ãâ·ÂÇÒ UI ÅØ½ºÆ®
    [SerializeField] public Text saveText; // ÀúÀå¿Ï·á ¸Ş½ÃÁö¸¦ Ãâ·ÂÇÒ UI ÅØ½ºÆ®

    // -----displayname Á¶°Ç-----
    private const int MinLength = 3; // ÃÖ¼Ò ÀÔ·Â ±æÀÌ(2±ÛÀÚ ÀÌ»ó)
    private const int MaxLength = 8; // ÃÖ´ë ÀÔ·Â ±æÀÌ(º¯µ¿°¡´É)

    public Image centralImage; // Áß¾Ó¿¡ Ç¥½ÃµÇ´Â ÇÁ·ÎÇÊÀÌ¹ÌÁö
    public Sprite[] profileImages; // 3°¡Áö ±âº» Á¦°ø ÀÌ¹ÌÁö

    private int currentIndex = 0; // ÇöÀç ¼±ÅÃµÈ ÀÌ¹ÌÁö ÀÎµ¦½º
    private const string PROFILE_IMAGE_INDEX_KEY = "ProfileImageIndex";  // ÀúÀå Å°
    private string displayName; //µğ½ºÇÃ·¹ÀÌ ÀÌ¸§(ÀÓ½ÃÀúÀåÀ» À§ÇÑ º¯¼ö)

    public GameObject profilePanel; //ÇÁ·ÎÇÊ ¼³Á¤ ÆĞ³Î(¸ŞÀÎÆĞ³Î¿¡¼­ ¹Ì¸® ÁØºñÇØ¾ß ÀÛµ¿)
    public GameObject usersetPanel; //À¯Àú ÃÊ±â ¼³Á¤ ÆĞ³Î

    void Start()
    {
        if ((usersetPanel.activeSelf || profilePanel.activeSelf))
        {
            DisplayName(); // ±âÁ¸ ÀÌ¸§ Á¤º¸ ºÒ·¯¿Í º¯¼ö¿¡ ÀúÀå
            CheckAndSaveDefaultImageIndex(); // °ÔÀÓ ½ÃÀÛ ½Ã ÀúÀåµÈ ÀÌ¹ÌÁö ÀÎµ¦½º¸¦ ºÒ·¯¿Í º¯¼ö¿¡ ÀúÀå ¹× ÀÌ¹ÌÁö ¾÷µ¥ÀÌÆ®
        }

        confirmButton.interactable = false; // ±âº»ÀûÀ¸·Î ¹öÆ° ºñÈ°¼ºÈ­
        warningText.text = ""; // ÃÊ±â °æ°í ¸Ş½ÃÁö ºñ¿ì±â
        saveText.text = ""; // ÃÊ±â ÀúÀå ¸Ş½ÃÁö ºñ¿ì±â

        //³»¿ëÀÌ º¯°æµÇ¾úÀ»¶§ ±ÔÄ¢ °Ë»ç
        inputText.onValueChanged.AddListener(ValidateNickname);

        //È®ÀÎ ¹öÆ° ´©¸£¸é ÀÌ¸§ ÀúÀå
        confirmButton.onClick.AddListener(OnClickSaveDisplayName); //ÃÊ±â ÀÌ¸§ ÀúÀå (+ ´Ü¾î¿Ï¼ºÈ½¼ö ¹öÆ°¿¡ Á÷Á¢ ¿¬°á)
    }


    // ÀÌ¸§ ´Ğ³×ÀÓ °ü·Ã ÇÔ¼öµé
    // ¼³Á¤ÇÑ ÀÌ¸§ ÀúÀå ÇÔ¼ö
    public void DisplayName() //DisplayName: °íÀ¯ÇÏÁö ¾ÊÀ½
    {
        var request = new GetAccountInfoRequest(); //ÀÌ¸§ Á¤º¸ ºÒ·¯¿À±â
        PlayFabClientAPI.GetAccountInfo(request,
             result =>
             {
                 // ±âÁ¸ displayNameÀÌ ¾ø´Â °æ¿ì nullÀ» ¹İÈ¯
                 if (string.IsNullOrEmpty(result.AccountInfo.TitleInfo.DisplayName))
                 {
                     displayName = null; // displayNameÀÌ ¾øÀ¸¸é null ÇÒ´ç
                     Debug.Log("displayNameÀÌ ¾ø½À´Ï´Ù.");
                 }
                 else // ±âÁ¸ °ªÀÌ Á¸ÀçÇÏ´Â °æ¿ì
                 {
                     // displayName °ªÀ» Àü¿ª º¯¼ö¿¡ ÀúÀå
                     displayName = result.AccountInfo.TitleInfo.DisplayName;

                     SaveCustomProperty("Displayname", displayName); //ÇÁ·ÎÇÊÆĞ³Î¿¡ ¾÷µ¥ÀÌÆ®-ÇØ´ç ÀÌ¸§À» Ä¿½ºÅÒÇÁ·ÎÆÛÆ¼¿¡ ÀúÀå
                     Debug.Log($"displayName: {displayName}À» ÇÁ·ÎÆÛÆ¼¿¡ ÀúÀåÇß½À´Ï´Ù");
                 }
             },
            error =>
            {
                Debug.LogError($"À¯Àú Á¤º¸ ºÒ·¯¿À±â ½ÇÆĞ: {error.GenerateErrorReport()}");
            });
    }


    // À¯Àú ÇÁ·ÎÇÊ ÀÌ¹ÌÁö °ü·Ã ÇÔ¼öµé
    // ÀúÀåµÈ ÀÌ¹ÌÁö ÀÎµ¦½º¸¦ ºÒ·¯¿À±â
    private void CheckAndSaveDefaultImageIndex()
    {
        var request = new GetUserDataRequest();
        PlayFabClientAPI.GetUserData(request,
            result =>
            {
                // PROFILE_IMAGE_INDEX_KEY°¡ Á¸ÀçÇÏ´ÂÁö È®ÀÎ
                if (result.Data.ContainsKey(PROFILE_IMAGE_INDEX_KEY))
                {
                    Debug.Log("ÇÁ·ÎÇÊÀÌ¹ÌÁö KEY°¡ Á¸ÀçÇÕ´Ï´Ù. °ªÀ» ºÒ·¯¿É´Ï´Ù.");
                    string value = result.Data[PROFILE_IMAGE_INDEX_KEY].Value;

                    if (!string.IsNullOrEmpty(value))  //°ªÀÌ Á¸ÀçÇÑ´Ù¸é
                    {
                        currentIndex = int.Parse(value);
                        
                    }
                    else 
                    {
                        Debug.LogWarning("KEYÀÇ °ªÀÌ ºñ¾î ÀÖ½À´Ï´Ù. ±âº»°ª(0)À¸·Î ÀúÀåÇÕ´Ï´Ù.");
                        currentIndex = 0; // ±âº»°ª ¼³Á¤
                    }
                }
                else
                {
                    Debug.LogWarning("KEY°¡ Á¸ÀçÇÏÁö ¾Ê½À´Ï´Ù. ±âº»°ª(0)À» »ı¼ºÇÕ´Ï´Ù.");
                    currentIndex = 0; // ±âº»°ª ¼³Á¤
                }

                UpdateCentralImage(); // ÀÌ¹ÌÁö ¾÷µ¥ÀÌÆ® ¹× ÀÎµ¦½º ÀúÀå, ÇÁ·ÎÆÛÆ¼¿¡ ÀúÀå
            },
            error =>
            {
                Debug.LogError($"À¯Àú µ¥ÀÌÅÍ ºÒ·¯¿À±â ½ÇÆĞ: {error.GenerateErrorReport()}");
            });
    }


    // ÀÌ¹ÌÁö ¾÷µ¥ÀÌÆ® ÇÔ¼ö
    private void UpdateCentralImage()
    {
        if (profileImages.Length > 0 && currentIndex >= 0 && currentIndex < profileImages.Length)
        {
            centralImage.sprite = profileImages[currentIndex];  // ÀÎµ¦½º¿¡ ÇØ´çÇÏ´Â ÀÌ¹ÌÁö·Î ¾÷µ¥ÀÌÆ®
            SaveSelectedImageIndex(currentIndex);                // ¼±ÅÃµÈ ÀÌ¹ÌÁö ÀÎµ¦½º ÀúÀå
        }
        else
        {
            Debug.LogWarning("Invalid profile image index.");
        }
    }

    // ¼±ÅÃµÈ ÀÌ¹ÌÁö ÀÎµ¦½º¸¦ ÀúÀå
    private void SaveSelectedImageIndex(int index)
    {
        // ¼±ÅÃµÈ ÀÌ¹ÌÁö ÀÎµ¦½º¸¦ PlayFab Å¸ÀÌÆ² µ¥ÀÌÅÍ¿¡ ÀúÀå
        var request = new UpdateUserDataRequest
        {
            Data = new Dictionary<string, string>
        {
            { PROFILE_IMAGE_INDEX_KEY, index.ToString() }
        },
            Permission = UserDataPermission.Public // µ¥ÀÌÅÍ¸¦ °ø°³ »óÅÂ·Î ÀúÀå
        };

        //playfab¿¡ ÀúÀå
        PlayFabClientAPI.UpdateUserData(request,
            result =>
            {
                Debug.Log($"ÇÁ·ÎÇÊÀÌ¹ÌÁö µ¥ÀÌÅÍ ÀúÀå ¼º°ø: {index}");
            },
            error =>
            {
                Debug.LogError($"À¯Àú µ¥ÀÌÅÍ ÀúÀå ½ÇÆĞ: {error.GenerateErrorReport()}");
            });
        //º¯°æµÈ ÀÌ¹ÌÁö ÀÎµ¦½º¸¦ Ä¿½ºÅÒÇÁ·ÎÆÛÆ¼¿¡ ÀúÀå(µ¤¾î¾²±â)
        SaveCustomProperty("Imageindex", index.ToString()); 
        Debug.Log($"¼±ÅÃµÈ Imageindex: {currentIndex}À» ÇÁ·ÎÆÛÆ¼¿¡ ÀúÀåÇß½À´Ï´Ù");
    }




    // ¿ŞÂÊ ¹öÆ° Å¬¸¯ ½Ã È£Ãâ
    public void OnLeftButtonClicked()
    {
        currentIndex--;
        if (currentIndex < 0) currentIndex = profileImages.Length - 1;  // ¼øÈ¯ (¸Ç Ã³À½À¸·Î µ¹¾Æ°¨)
        UpdateCentralImage();  // ÀÌ¹ÌÁö ¾÷µ¥ÀÌÆ®
    }

    // ¿À¸¥ÂÊ ¹öÆ° Å¬¸¯ ½Ã È£Ãâ
    public void OnRightButtonClicked()
    {
        currentIndex++;
        if (currentIndex >= profileImages.Length) currentIndex = 0;  // ¼øÈ¯ (¸Ç ¸¶Áö¸·¿¡¼­ Ã³À½À¸·Î µ¹¾Æ°¨)
        UpdateCentralImage();  // ÀÌ¹ÌÁö ¾÷µ¥ÀÌÆ®
    }



    public void OnClickSaveDisplayName()
    {
        // displayNameÀÌ Á¸ÀçÇÏ´ÂÁö È®ÀÎ(Ã¹ À¯ÀúÀÎÁö ¾Æ´ÑÁö¸¦ È®ÀÎ)
        if (string.IsNullOrEmpty(displayName))
        {
            // displayNameÀÌ ¾øÀ» °æ¿ì (Ã¹ À¯ÀúÀÏ °æ¿ì)
            SaveDisplayName(); //´Ğ³×ÀÓÀ» ÀúÀå(ÇÁ·ÎÆÛÆ¼¿¡µµ ÀúÀå)
            Debug.Log("Ã¹ displayNameÀÌ ¼³Á¤µÇ¾ú½À´Ï´Ù.");
            OnClickConnect(); //¸ŞÀÎÀ¸·Î ¼­¹öÁ¢¼ÓÀ» ¿äÃ»ÇÑ´Ù
        }
        else //displaynameÀÌ ÀÌ¹Ì Á¸ÀçÇÒ °æ¿ì(ÀçÁ¢¼Ó À¯ÀúÀÏ °æ¿ì)
        {
            // Àü¿ª º¯¼ö·Î displayName¿¡ ÀúÀå
            SaveDisplayName(); //±âÁ¸ÀÇ ÀÌ¸§À» »õ ÀÌ¸§À¸·Î µ¤¾î¾º¿ö ÀúÀåÇÑ´Ù
            Debug.Log("»õ·Î¿î displayNameÀÌ ¼³Á¤µÇ¾ú½À´Ï´Ù.");
            saveText.text = "ÀúÀåµÇ¾ú½À´Ï´Ù"; //ÀúÀå ¸Ş½ÃÁö ¾Ë¸²
        }
    }
    public void SaveDisplayName() //´Ü¼øÈ÷ ÀÌ¸§ ÀúÀåÇÏ±â
    {
        string displayName = inputText.text.Trim();

        var request = new UpdateUserTitleDisplayNameRequest
        {
            DisplayName = displayName
        };
        
        //playfab¿¡ ÀúÀå
        PlayFabClientAPI.UpdateUserTitleDisplayName(request,
           result =>
           {
               Debug.Log($"´Ğ³×ÀÓ ÀúÀå ¼º°ø: {result.DisplayName}");
           },

           error =>
           {
               Debug.LogError($"´Ğ³×ÀÓ ÀúÀå ½ÇÆĞ: {error.GenerateErrorReport()}");
           });
        SaveCustomProperty("Displayname", displayName); //º¯°æµÈ ÀÌ¸§À» Ä¿½ºÅÒÇÁ·ÎÆÛÆ¼¿¡ ÀúÀå(or µ¤¾î¾²±â)
        Debug.Log($"Displayname: {displayName}À» ÇÁ·ÎÆÛÆ¼¿¡ ÀúÀåÇß½À´Ï´Ù");
    }

    // --------------Ä¿½ºÅÒÇÁ·ÎÆÛÆ¼¿¡ ÀÌ¸§, ÀÎµ¦½º ÀúÀå -----------------
    void SaveCustomProperty(string key, string value)
    {
        // 1. ÇØ½ÃÅ×ÀÌºí »ı¼º
        Hashtable customProperties = new Hashtable();

        // 2. Å°¿Í °ªÀ» Ãß°¡
        customProperties[key] = value;

        // 3. Ä¿½ºÅÒ ÇÁ·ÎÆÛÆ¼¸¦ ¼³Á¤ (ÇÃ·¹ÀÌ¾îÀÇ Ä¿½ºÅÒ ÇÁ·ÎÆÛÆ¼¿¡ ÀúÀå)
        PhotonNetwork.LocalPlayer.SetCustomProperties(customProperties);
    }


    //ÀÌ¸§ º¯°æ ¹öÆ° Å¬¸¯ÇÒ ¶§ -> ÀÌ¸§ ÀÔ·Â ÀÎÇ² È°¼ºÈ­
    public void ChangeNameBtn() 
    {
        inputText.interactable = true; //ÀÌ¸§ º¯°æ È°¼ºÈ­
    }


    //ÀÌ¸§ ¼³Á¤ ±ÔÄ¢(displayname)
    public void ValidateNickname(string input)
    {
        /// ÇÑ±Û(¿Ï¼ºÇü/ÀÚÀ½/¸ğÀ½)°ú ¼ıÀÚ¸¸ Çã¿ëÇÏ´Â Á¤±Ô½Ä
        string validPattern = @"^[°¡-ÆR¤¡-¤¾¤¿-¤Ó0-9]*$";

        // °ø¹é Á¦°Å
        string inputname = input.Replace(" ", ""); //°ø¹éÀ» Çã¿ëÇÏÁö ¾Ê´Â´Ù

        // ÀÔ·Â °ªÀÌ ÆĞÅÏ¿¡ ¸ÂÁö ¾ÊÀ¸¸é ¼öÁ¤
        if (!Regex.IsMatch(inputname, validPattern))
        {
            warningText.text = "ÇÑ±Û°ú ¼ıÀÚ¸¸ ÀÔ·Â °¡´ÉÇÕ´Ï´Ù.";
            confirmButton.interactable = false; 
        }
        // ±æÀÌ Á¦ÇÑ ÃÊ°ú °Ë»ç
        else if (GetKoreanCharCount(inputname) > MaxLength) // ÇÑ±Û ÀÚÀ½, ¸ğÀ½À» Æ÷ÇÔÇÑ ÃÖ´ë ±æÀÌ °Ë»ç
        {
            warningText.text = $"ÃÖ´ë {MaxLength}ÀÚ±îÁö¸¸ ÀÔ·Â °¡´ÉÇÕ´Ï´Ù.";
            confirmButton.interactable = false; 
        }
        // ÃÖ¼Ò ±æÀÌ ÃæÁ· °Ë»ç
        else if (GetKoreanCharCount(inputname) < MinLength) // ÇÑ±Û ÀÚÀ½, ¸ğÀ½À» Æ÷ÇÔÇÑ ÃÖ´ë ±æÀÌ °Ë»ç
        {
            warningText.text = $"ÃÖ¼Ò {MinLength}ÀÚ ÀÌ»óÀÌ¾î¾ß ÇÕ´Ï´Ù."; //3ÀÚ ÀÌ»óÀÌ¾î¾ß ÇÔ
            confirmButton.interactable = false;
        }
        else if (inputname.Length == 0) // ºó ¹®ÀÚ¿­ °Ë»ç
        {
            warningText.text = "´Ğ³×ÀÓÀ» ÀÔ·ÂÇØÁÖ¼¼¿ä.";
            confirmButton.interactable = false; 
        }
        else if (displayName == inputname && (inputText.isActiveAndEnabled)) //ÀÔ·Â¶õÀÌ ±âÁ¸ ´Ğ³×ÀÓ°ú °°À¸¸é¼­ È°¼ºÈ­µÇ¾îÀÖ´Â °æ¿ì
        {
            warningText.text = "±âÁ¸ ´Ğ³×ÀÓ°ú ´Ş¶ó¾ß ÇÕ´Ï´Ù.";
            confirmButton.interactable = false;
        }
        else
        {
            warningText.text = ""; // ±ÔÄ¢¿¡ ¸ÂÀ¸¸é °æ°í ¸Ş½ÃÁö Á¦°Å
            confirmButton.interactable = true; // È®ÀÎ ¹öÆ° È°¼ºÈ­
        }
        // ÀÔ·Â¶õ¿¡ °ø¹éÀ» Á¦°ÅÇÑ °ª ¹İ¿µ
        inputText.text = inputname;
    }


    // ÇÑ±Û À½Àı ÀÚÀ½, ¸ğÀ½À» Æ÷ÇÔÇÏ¿© ±ÛÀÚ ¼ö¸¦ °è»êÇÏ´Â ÇÔ¼ö
    private int GetKoreanCharCount(string input)
    {
        int count = 0;
        foreach (char c in input)
        {
            // ÇÑ±Û À½ÀıÀÎÁö Ã¼Å© (°¡-ÆR ¹üÀ§)
            if (c >= '°¡' && c <= 'ÆR')
            {
                count++;
            }
            // ÇÑ±Û ÀÚÀ½/¸ğÀ½ÀÎÁö Ã¼Å© (¤¡-¤¾, ¤¿-¤Ó ¹üÀ§)
            else if ((c >= '¤¡' && c <= '¤¾') || (c >= '¤¿' && c <= '¤Ó'))
            {
                count++;
            }
            // ¼ıÀÚ(0-9)ÀÎÁö Ã¼Å©
            else if (c >= '0' && c <= '9')
            {
                count++;
            }
        }
        return count;
    }


    public override void OnConnectedToMaster()
    {
        base.OnConnectedToMaster();
        Debug.Log("¸¶½ºÅÍ ¼­¹ö Á¢¼Ó ¼º°ø");

        //³ªÀÇ ÀÌ¸§À» Æ÷Åæ¿¡ ¼³Á¤
        PhotonNetwork.NickName = inputText.text;

        // Æ÷Åæ À¯Àú ID Ãâ·Â
        //Debug.Log($"Photon UserId: {PhotonNetwork.AuthValues.UserId}");

        //·ÎºñÁøÀÔ
        PhotonNetwork.JoinLobby();
    }

    //Lobby ÁøÀÔ¿¡ ¼º°øÇßÀ¸¸é È£ÃâµÇ´Â ÇÔ¼ö
    public override void OnJoinedLobby()
    {
        base.OnJoinedLobby();

        //¸ŞÀÎ ¾ÀÀ¸·Î ÀÌµ¿
        PhotonNetwork.LoadLevel("Main");

        print("·Îºñ ÁøÀÔ ¼º°ø");

    }
    public void OnClickConnect()
    {
        // ¸¶½ºÅÍ ¼­¹ö Á¢¼Ó ¿äÃ»
        PhotonNetwork.ConnectUsingSettings();
    }

    private void OnDestroy()
    {
        // ÀÌº¥Æ® ÇØÁ¦
        inputText.onValueChanged.RemoveListener(ValidateNickname);
    }


}


